const bat = [1, 4, 5, 7, 9]
// returns the sum of an array of numbers
function arrAddition(numArr) {
    let sum = 0;
    for (let i = 0; i < numArr.length; i++) {

        sum += numArr[i];
    }
    return sum
}

console.log(arrAddition(bat));

// returns the average of an array of a numbers
function arrAverage(numArr) {
    let avg = 0;
    let count = 0;
    for (let i = 0; i < numArr.length; i++) {

        avg += numArr[1];
    }
    return avg / numArr.length
}

console.log(arrAverage(bat));

//return the longest string in array
const arrStrings = ['Abdou', 'Mark', 'Wyatt', 'David'];
function longestStr(str) {
    let longestStr = "";
    for (let name of str) {
        if (longestStr.length < name.length) {
            longestStr = name;
        }
    }
    return longestStr;
}
//console.log(longestStr(arrStrings))

// return strings larger than given number
const arrStrings1 = ['Abdou', 'Mark', 'Wyatt', 'David'];
function arrStringsLong(yankees, number) {
    let stringWorld = [];

    for (let i = 0; i < yankees.length; i++) {


        if (yankees[i].length > number) {
            stringWorld.push(yankees[i])
        }
    }
    return stringWorld
}
//console.log(arrStringsLong(arrStrings1, 4));

// returns numbers btw 1-'j'
function countDown(j) {
    if (j > 0) {
        console.log(j);
        countDown(j - 1);
    }
} //countDown(4);

//     ************************ Part 2************************
const data = [
    { id: "42", name: "Bruce", occupation: "Knight", age: "41" },
    { id: "48", name: "Barry", occupation: "Runner", age: "25" },
    { id: "57", name: "Bob", occupation: "Fry Cook", age: "19" },
    { id: "63", name: "Blaine", occupation: "Quiz Master", age: "58" },
    { id: "7", name: "Bilbo", occupation: "None", age: "111" },
];

function sortAge(arr) {
    return arr.sort((a, b) => Number(a.age) - Number(b.age));
}

console.log(sortAge([...data]));

function under50(arr, maxAge) {
    let filterArr = arr.filter(person => Number(person.age) <= maxAge);

    let updatedArr = filterArr.map(person => {
        return {
            id: Number(person.id),
            name: person.name,
            job: person.occupation,
            age: Number(person.age) + 1,
        };
    });

    return updatedArr;
}

const dataSorted = under50(data, 50);
console.log(dataSorted);

let ageArr = dataSorted.map(person => Number(person.age));
console.log(ageArr);

const sumOfAge = ageArr.reduce((sum, age) => {
    return sum + age;
}, 0);

console.log(sumOfAge);

let avg = sumOfAge / ageArr.length;
console.log(avg);
